name: CUDA Version

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
    - release/*

# automatically cancel in-progress builds if another commit is pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  root_docker_folder: /LightGBM

jobs:
  test:
    name: ${{ matrix.task }} ${{ matrix.cuda_version }} ${{ matrix.method }} (linux, ${{ matrix.compiler }}, Python ${{ matrix.python_version }})
    runs-on: [self-hosted, linux]
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        include:
          - method: wheel
            compiler: gcc
            python_version: "3.11"
            cuda_version: "11.8.0"
            image: nvcr.io/nvidia/cuda:11.8.0-devel-ubuntu18.04
            task: cuda
          - method: source
            compiler: gcc
            python_version: "3.9"
            cuda_version: "12.2.0"
            image: nvcr.io/nvidia/cuda:12.2.0-devel-ubuntu20.04
            task: cuda
          - method: pip
            compiler: clang
            python_version: "3.10"
            cuda_version: "11.8.0"
            image: nvcr.io/nvidia/cuda:11.8.0-devel-ubuntu18.04
            task: cuda
    steps:
      - name: Setup or update software on host machine
        run: |
            sudo apt-get update
            sudo apt-get install --no-install-recommends -y \
                apt-transport-https \
                ca-certificates \
                curl \
                git \
                gnupg-agent \
                lsb-release \
                software-properties-common
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
            sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" -y
            curl -sL https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add -
            curl -sL https://nvidia.github.io/nvidia-docker/$(. /etc/os-release;echo $ID$VERSION_ID)/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list
            sudo apt-get update
            sudo apt-get install --no-install-recommends -y \
                containerd.io \
                docker-ce \
                docker-ce-cli \
                nvidia-docker2
            sudo chmod a+rw /var/run/docker.sock
            sudo systemctl restart docker
      - name: Remove old checkout of the repository
        run: |
          # this needs to be run as the same user that created the files
          docker run \
            --rm \
            -v "$GITHUB_WORKSPACE":/opt/repo \
            -w /opt \
            ${{ matrix.image }} \
            rm -rf /opt/repo/* || true
          sudo rm -rf "$GITHUB_WORKSPACE"/*
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 5
          submodules: true
      - name: Setup and run tests
        run: |
            cat > docker-script.sh <<EOF
            export CONDA=\$HOME/miniforge
            export PATH=\$CONDA/bin:\$PATH
            nvidia-smi
            ${{ env.root_docker_folder }}/.ci/setup.sh || exit 1
            ${{ env.root_docker_folder }}/.ci/test.sh || exit 1
            EOF
            docker run \
              --rm \
              --gpus all \
              --env BUILD_DIRECTORY=${{ env.root_docker_folder }} \
              --env COMPILER=${{ matrix.compiler }} \
              --env CONDA_ENV='test-env' \
              --env METHOD=${{ matrix.method }}
              --env OS_NAME=linux \
              --env PYTHON_VERSION=${{ matrix.python_version }} \
              --env TASK=${{ matrix.task }} \
              -v "$GITHUB_WORKSPACE":"${{ env.root_docker_folder }}" \
              ${{ matrix.image }} \
              /bin/bash $ROOT_DOCKER_FOLDER/docker-script.sh
  all-cuda-jobs-successful:
    if: always()
    runs-on: ubuntu-latest
    needs: [test]
    steps:
    - name: Note that all tests succeeded
      uses: re-actors/alls-green@v1.2.2
      with:
        jobs: ${{ toJSON(needs) }}
