# task type, support train and predict
task = train

# boosting type, support gbdt for now, alias: boosting, boost
boosting_type = gbdt

# application type, support following application
# regression , regression task
# binary , binary classification task
# lambdarank , LambdaRank task
# multiclass
# alias: application, app
objective = multiclass

# eval metrics, support multi metric, delimited by ',' , support following metrics
# l1 
# l2 , default metric for regression
# ndcg , default metric for lambdarank
# auc 
# binary_logloss , default metric for binary
# binary_error
# multi_logloss
# multi_error
# auc_mu
metric = multi_logloss,auc_mu

# AUC-mu weights; the matrix of loss weights below is passed in parameter auc_mu_weights as a list
#  0  1  2  3  4
#  5  0  6  7  8
#  9 10  0 11 12
# 13 14 15  0 16
# 17 18 19 20  0
auc_mu_weights = 0,1,2,3,4,5,0,6,7,8,9,10,0,11,12,13,14,15,0,16,17,18,19,20,0

# number of class, for multiclass classification
num_class = 5

# frequency for metric output
metric_freq = 1

# true if need output metric for training data, alias: tranining_metric, train_metric
is_training_metric = true

# number of bins for feature bucket, 255 is a recommend setting, it can save memories, and also has good accuracy. 
max_bin = 255

# training data
# if existing weight file, should name to "regression.train.weight"
# alias: train_data, train
data = multiclass.train

# valid data
valid_data = multiclass.test

# round for early stopping
early_stopping = 10

# number of trees(iterations), alias: num_tree, num_iteration, num_iterations, num_round, num_rounds
num_trees = 100

# shrinkage rate , alias: shrinkage_rate
learning_rate = 0.05

# number of leaves for one tree, alias: num_leaf
num_leaves = 31
